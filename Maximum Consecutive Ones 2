Maximum Consecutive Ones 2
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

Input format
The first line contains two integer, n and k, where n denotes the size of binary array and k denotes the number of flips allowed.

The second line contains n space separated integers

Output format
A single integer denoting maximum number of consecutive 1's in a single line.

Example 1
Input

11 2
1 1 1 0 0 0 1 1 1 1 0
Output

6
Explanation

[1,1,1,0,0,1,1,1,1,1,1]

This is the longest consecutive 1's subarray

Example 2
Input

4 4
0 0 0 1
Output

4
Explanation

We can flip all 0s to make it [1,1,1,1].

Constraints:
1 <= nums.length <= 10^5

0 <= nums[i] <= 1

0 <= k <= nums.length

Topics
Sliding Window
Binary Search
Arrays
Companies
MakeMyTrip
Amazon
Facebook
Coden


import java.util.*;

class Solution {
    static int maxOne(int arr[], int n,int k)
    {
        //Write your code here
        int countZero=0;
        int i=0,j=0,ans=0;
        while(j<n){
            if(arr[j]==0){
               countZero++;
                if(countZero>k){
                    while(i<=j){
                        if(arr[i]==0){
                            i++;
                            countZero--;
                            break;
                        }else{
                           i++;  
                        }
                    }
                   
                   
                }
                j++;
            }else{
                j++;
            }
            ans=Math.max(ans, j-i);
        }
        return ans;
    }
    

}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n= sc.nextInt();
        int k= sc.nextInt();
        int array[] = new int[n];

        for(int i=0; i<n; i++){
            array[i]= sc.nextInt();
        }
        Solution Obj = new Solution();
        System.out.println(Obj.maxOne(array,n,k));
    }
}
